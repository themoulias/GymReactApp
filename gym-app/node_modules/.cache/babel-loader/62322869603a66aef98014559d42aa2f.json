{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Themis\\\\Desktop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Themis\\\\Desktop\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Themis\\\\Desktop\\\\myGymApp\\\\gym-app\\\\src\\\\App.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport Members from \"./components/Members/Members\";\nimport NewMember from \"./components/Members/NewMember/NewMember\";\nimport TransformData from \"./components/Members/TransformData\";\nimport LoadMembers from \"./components/Members/LoadMembers\";\nimport TitleChange from \"./components/TitleChange\";\nimport \"./components/Members/NewMember/NewMember.css\";\nvar API_URL = \"http://localhost:8080/api/gym\";\nfunction App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    members = _useState2[0],\n    setMembers = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isLoading = _useState4[0],\n    setIsLoading = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1]; // GET: REQUEST FROM API\n  var getRequestHandler = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var response, data, loadedMembers;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            setError(null); // To clear any previous errors\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(API_URL);\n          case 5:\n            response = _context.sent;\n            if (response.ok) {\n              _context.next = 8;\n              break;\n            }\n            throw new Error(\"Something went wrong! :( \");\n          case 8:\n            _context.next = 10;\n            return response.json();\n          case 10:\n            data = _context.sent;\n            loadedMembers = LoadMembers(data);\n            setMembers(loadedMembers);\n            _context.next = 18;\n            break;\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](2);\n            //console.log(\"GET: ERR= \" + error);\n            setError(_context.t0.message);\n          case 18:\n            setIsLoading(false);\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 15]]);\n  })), []);\n\n  // POST: REQUEST FROM API\n  var postRequestHandler = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(memberData, addressData, membershipData, paymentData) {\n      var rawData, response, data;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              //const rawData = transformData(memberData,addressData,membershipData,paymentData);\n              rawData = TransformData(memberData, addressData, membershipData, paymentData);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return fetch(API_URL, {\n                method: \"POST\",\n                body: JSON.stringify(rawData),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n            case 4:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 7;\n                break;\n              }\n              throw new Error(\"Something went wrong! :( (POST) \");\n            case 7:\n              _context2.next = 9;\n              return response.json();\n            case 9:\n              data = _context2.sent;\n              _context2.next = 15;\n              break;\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](1);\n              //console.log(\"POST: ERR = \" + error);\n              setError(_context2.t0.message + \" ON POST REQUEST\");\n            case 15:\n              getRequestHandler();\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 12]]);\n    }));\n    return function (_x, _x2, _x3, _x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [getRequestHandler]);\n\n  // DELETE: REQUEST FROM API\n  var deleteRequestHadndler = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id) {\n      var response, data;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return fetch(API_URL + \"/\" + id, {\n                method: \"DELETE\"\n              });\n            case 3:\n              response = _context3.sent;\n              if (response.ok) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(\"Something went wrong! :( (POST) \");\n            case 6:\n              _context3.next = 8;\n              return response.json();\n            case 8:\n              data = _context3.sent;\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](0);\n              //console.log(\"DEL: ERR = \" + error);\n              setError(_context3.t0.message + \" ON DELETE REQUEST\");\n            case 14:\n              getRequestHandler();\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 11]]);\n    }));\n    return function (_x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [getRequestHandler]);\n\n  // PUT: REQUEST FROM API\n  var putRequestHandler = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id, memberData, addressData, membershipData, paymentData) {\n      var rawData, response, data;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //const rawData = transformData(memberData,addressData,membershipData,paymentData);\n              rawData = TransformData(memberData, addressData, membershipData, paymentData);\n              _context4.prev = 1;\n              _context4.next = 4;\n              return fetch(API_URL + \"/\" + id, {\n                method: \"PUT\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(rawData)\n              });\n            case 4:\n              response = _context4.sent;\n              if (response.ok) {\n                _context4.next = 7;\n                break;\n              }\n              throw new Error(\"Something went wrong! :( (PUT) \");\n            case 7:\n              _context4.next = 9;\n              return response.json();\n            case 9:\n              data = _context4.sent;\n              _context4.next = 15;\n              break;\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](1);\n              //console.log(\"PUT ERR: \" + error);\n              setError(_context4.t0.message + \" ON PUT REQUEST\");\n            case 15:\n              getRequestHandler();\n            case 16:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 12]]);\n    }));\n    return function (_x6, _x7, _x8, _x9, _x10) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [getRequestHandler]);\n\n  // Get members\n  // Runs once on reload page.\n  // Loads the Data from API when starts/reloads\n  useEffect(function () {\n    // only runs once\n    console.log(\"DataBase Loaded\");\n    getRequestHandler();\n  }, [getRequestHandler]);\n\n  // Handle error situations\n  var content = /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"member\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Found no members.\");\n  if (members.length > 0) {\n    content = /*#__PURE__*/React.createElement(Members, {\n      items: members,\n      onDeleteMember: deleteRequestHadndler // To return the Id of member who wanna delete\n      ,\n      onEditMember: putRequestHandler // To return the EditedMemberData\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    });\n  }\n  if (error) {\n    content = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 15\n      }\n    }, error);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"member\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Loading Data...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"new-member\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Gym Members Manager\"), TitleChange(), /*#__PURE__*/React.createElement(NewMember, {\n    onAddMember: postRequestHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), content);\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Members","NewMember","TransformData","LoadMembers","TitleChange","API_URL","App","members","setMembers","isLoading","setIsLoading","error","setError","getRequestHandler","fetch","response","ok","Error","json","data","loadedMembers","message","postRequestHandler","memberData","addressData","membershipData","paymentData","rawData","method","body","JSON","stringify","headers","deleteRequestHadndler","id","putRequestHandler","Accept","console","log","content","length"],"sources":["C:/Users/Themis/Desktop/myGymApp/gym-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\n\nimport Members from \"./components/Members/Members\";\nimport NewMember from \"./components/Members/NewMember/NewMember\";\nimport TransformData from \"./components/Members/TransformData\";\nimport LoadMembers from \"./components/Members/LoadMembers\";\nimport TitleChange from \"./components/TitleChange\";\nimport \"./components/Members/NewMember/NewMember.css\";\n\nconst API_URL = \"http://localhost:8080/api/gym\";\n\nfunction App() {\n  const [members, setMembers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  \n\n  // GET: REQUEST FROM API\n  const getRequestHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null); // To clear any previous errors\n    try {\n      const response = await fetch(API_URL);\n      if (!response.ok) {\n        // response has also a \"status\" field whick holds the concrete response status code\n        throw new Error(\"Something went wrong! :( \");\n      }\n      const data = await response.json();\n      const loadedMembers = LoadMembers(data);\n      setMembers(loadedMembers);\n    } catch (error) {\n      //console.log(\"GET: ERR= \" + error);\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  // POST: REQUEST FROM API\n  const postRequestHandler = useCallback(\n    async (memberData, addressData, membershipData, paymentData) => {\n      //const rawData = transformData(memberData,addressData,membershipData,paymentData);\n      const rawData = TransformData(\n        memberData,\n        addressData,\n        membershipData,\n        paymentData\n      );\n      try {\n        const response = await fetch(API_URL, {\n          method: \"POST\",\n          body: JSON.stringify(rawData),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        if (!response.ok) {\n          throw new Error(\"Something went wrong! :( (POST) \");\n        }\n        const data = await response.json();\n      } catch (error) {\n        //console.log(\"POST: ERR = \" + error);\n        setError(error.message + \" ON POST REQUEST\");\n      }\n      getRequestHandler();\n    },\n    [getRequestHandler]\n  );\n\n  // DELETE: REQUEST FROM API\n  const deleteRequestHadndler = useCallback(\n    async (id) => {\n      try {\n        const response = await fetch(API_URL + \"/\" + id, {\n          method: \"DELETE\",\n        });\n        if (!response.ok) {\n          throw new Error(\"Something went wrong! :( (POST) \");\n        }\n        const data = await response.json();\n      } catch (error) {\n        //console.log(\"DEL: ERR = \" + error);\n        setError(error.message + \" ON DELETE REQUEST\");\n      }\n      getRequestHandler();\n    },\n    [getRequestHandler]\n  );\n\n  // PUT: REQUEST FROM API\n  const putRequestHandler = useCallback(\n    async (id, memberData, addressData, membershipData, paymentData) => {\n      //const rawData = transformData(memberData,addressData,membershipData,paymentData);\n      const rawData = TransformData(\n        memberData,\n        addressData,\n        membershipData,\n        paymentData\n      );\n      try {\n        const response = await fetch(API_URL + \"/\" + id, {\n          method: \"PUT\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(rawData),\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong! :( (PUT) \");\n        }\n        const data = await response.json();\n      } catch (error) {\n        //console.log(\"PUT ERR: \" + error);\n        setError(error.message + \" ON PUT REQUEST\");\n      }\n      getRequestHandler();\n    },\n    [getRequestHandler]\n  );\n\n  // Get members\n  // Runs once on reload page.\n  // Loads the Data from API when starts/reloads\n  useEffect(() => {\n    // only runs once\n    console.log(\"DataBase Loaded\");\n    getRequestHandler();\n  }, [getRequestHandler]);\n\n  // Handle error situations\n  let content = <h2 className=\"member\">Found no members.</h2>;\n\n  if (members.length > 0) {\n    content = (\n      <Members\n        items={members}\n        onDeleteMember={deleteRequestHadndler} // To return the Id of member who wanna delete\n        onEditMember={putRequestHandler} // To return the EditedMemberData\n      />\n    );\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <h2 className=\"member\">Loading Data...</h2>;\n  }\n\n  return (\n    <div>\n      <h1 className=\"new-member\">Gym Members Manager</h1>\n      {TitleChange()}     \n      <NewMember onAddMember={postRequestHandler} />\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}